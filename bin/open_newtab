#!/usr/bin/env bash

## Description {{{
#
# Wrapper for macOS's open command to open folder in new tab of Finder instead
# of new window.
#
# Homepage: https://github.com/rcmdnk/open_newtab
#
# Usage: Same as `open` command. To make it easy, make an alias in your
#        .bashrc/.zshrc like:
#            alias open="open_newtab"
#
#
#
OPEN_NEWTAB_VERSION=v0.0.1
OPEN_NEWTAB_DATE="7/Apr/2017"
#
# }}}

## License {{{
# MIT License
#
# Copyright (c) 2017 rcmdnk
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# }}}

open_finder () {
  path="$1"
  if [ "$1" = "-R" ];then
    path=$(dirname "$2")
  fi
  abspath=$(cd "$path" 2>/dev/null && pwd -P)
  if [ "$abspath" = "" ];then
    echo "Wrong path: $path"
    return 1
  fi
  name=$(basename "$abspath")

  osascript >& /dev/null <<EOF
    # Set new path as alias
    set npath to ("$abspath" as POSIX file) as alias

    # Check if the folder is already opened or not
    tell application "System Events"
      tell process "Finder"
        set nwindows to number of windows
        repeat with i from 1 to nwindows
          set w to window i
          set wt to title of w
          set ntabgroups to number of tab groups of w
          repeat with j from 1 to ntabgroups
            set t to tab group j of w
            set nbuttons to number of radio buttons of t
            repeat with k from 1 to nbuttons
              set b to radio button k of t
              set bt to title of b
              if bt is "$name"
                click b
                tell application "Finder" to set bpath to target of window i as alias
                if bpath is npath
                  tell application "Finder" to activate
                  click menu item wt of menu 1 of menu bar item 7 of menu bar 1
                  return
                end if
                # Need to reset them after clicking
                set w to window i
                set t to tab group j of w
              end if
            end repeat
            # Reset to original tab
            click radio button wt of t
          end repeat
        end repeat
      end tell
    end tell

    # Open new tab
    tell application "Finder"
      activate
      if not (exists window 1) then
        make new Finder window
      else
        tell application "System Events" to keystroke "t" using command down
      end if
      set target of front window to npath
    end tell
EOF
}

# -R reveals a directory which contains specified file/directory
if [ "$1" = "-R" ] || ([ $# -eq 1 ] && [ -d "$1" ]);then
  open_finder "$@"
else
  command open "$@"
fi
